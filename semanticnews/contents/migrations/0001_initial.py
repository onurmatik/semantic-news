# Generated by Django 5.2.1 on 2025-08-21 12:04

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import pgvector.django.indexes
import pgvector.django.vector
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('handle', models.CharField(max_length=50)),
                ('default_language', models.CharField(default='tr', max_length=5)),
                ('channel_id', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('uploads_playlist_id', models.CharField(blank=True, max_length=50, null=True)),
                ('title', models.CharField(blank=True, max_length=200)),
                ('thumbnail', models.URLField(blank=True, null=True)),
                ('channel_last_update', models.DateTimeField(blank=True, null=True)),
                ('channel_next_update', models.DateTimeField(default=django.utils.timezone.now)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='MCPServer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100, unique=True)),
                ('url', models.URLField()),
                ('description', models.CharField(blank=True, max_length=100)),
                ('headers', models.JSONField(blank=True, default=dict)),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='RssFeed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(unique=True)),
                ('title', models.CharField(blank=True, max_length=20, null=True)),
                ('active', models.BooleanField(default=True)),
                ('last_fetch', models.DateTimeField(auto_now=True)),
                ('last_fetch_error', models.CharField(blank=True, max_length=500, null=True)),
                ('consecutive_error_count', models.PositiveSmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('domain', models.CharField(max_length=255, unique=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('url', models.URLField(blank=True, null=True, unique=True, validators=[django.core.validators.URLValidator()])),
                ('content_type', models.CharField(db_index=True, max_length=100)),
                ('title', models.CharField(blank=True, max_length=500, null=True)),
                ('markdown', models.TextField(blank=True, null=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('language_code', models.CharField(blank=True, max_length=10)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('embedding', pgvector.django.vector.VectorField(blank=True, dimensions=1536, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='content', to=settings.AUTH_USER_MODEL)),
                ('source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='contents', to='contents.source')),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_id', models.CharField(db_index=True, max_length=50, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('thumbnail', models.URLField(blank=True, null=True)),
                ('published_at', models.DateTimeField(db_index=True)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('is_short', models.BooleanField(default=False)),
                ('channel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contents.channel')),
            ],
            options={
                'ordering': ['-published_at'],
            },
        ),
        migrations.CreateModel(
            name='VideoTranscript',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('transcript_data', models.JSONField(blank=True, default=dict)),
                ('language_code', models.CharField(max_length=10)),
                ('is_generated', models.BooleanField(default=True)),
                ('video', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='contents.video')),
            ],
        ),
        migrations.CreateModel(
            name='VideoTranscriptChunk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.PositiveIntegerField(help_text='Start time in seconds')),
                ('raw_text', models.TextField(help_text='The raw text content of the chunk')),
                ('revised_text', models.TextField(blank=True, help_text='The revised text content of the chunk', null=True)),
                ('transcript', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chunks', to='contents.videotranscript')),
            ],
            options={
                'ordering': ('start_time',),
            },
        ),
        migrations.CreateModel(
            name='RssItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.CharField(max_length=500)),
                ('link', models.URLField(max_length=500, unique=True)),
                ('title', models.CharField(max_length=500)),
                ('summary', models.TextField(blank=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('fetched_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('new', 'New'), ('upserted', 'Upserted'), ('skipped', 'Skipped'), ('error', 'Error')], db_index=True, default='new', max_length=16)),
                ('error_message', models.TextField(blank=True)),
                ('embedding', pgvector.django.vector.VectorField(blank=True, dimensions=1536, null=True)),
                ('content', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contents.content')),
                ('feed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='contents.rssfeed')),
            ],
            options={
                'indexes': [pgvector.django.indexes.HnswIndex(ef_construction=64, fields=['embedding'], m=16, name='rssitem_embedding_hnsw', opclasses=['vector_l2_ops'])],
            },
        ),
        migrations.AddIndex(
            model_name='content',
            index=pgvector.django.indexes.HnswIndex(ef_construction=64, fields=['embedding'], m=16, name='content_embedding_hnsw', opclasses=['vector_l2_ops']),
        ),
        migrations.AddConstraint(
            model_name='videotranscript',
            constraint=models.UniqueConstraint(fields=('video', 'language_code'), name='unique_video_language'),
        ),
    ]
