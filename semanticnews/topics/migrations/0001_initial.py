# Generated by Django 5.2.1 on 2025-09-04 18:58

import django.core.validators
import django.db.models.deletion
import pgvector.django.indexes
import pgvector.django.vector
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('agenda', '0001_initial'),
        ('contents', '0001_initial'),
        ('keywords', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MCPServer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('url', models.URLField()),
                ('headers', models.JSONField(blank=True, default=dict)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=200, null=True)),
                ('embedding', pgvector.django.vector.VectorField(blank=True, dimensions=1536, null=True)),
                ('status', models.CharField(choices=[('removed', 'Removed'), ('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived')], db_index=True, default='draft', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('based_on', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='derivatives', to='topics.topic')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='topics', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TopicContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('evidence', 'Evidence'), ('summary', 'Summary'), ('quote', 'Quote')], default='evidence', max_length=20)),
                ('source', models.CharField(choices=[('user', 'User'), ('ml', 'ML'), ('rule', 'Rule')], default='user', max_length=10)),
                ('relevance', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('pinned', models.BooleanField(default=False)),
                ('rank', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contents.content')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='topics.topic')),
            ],
        ),
        migrations.AddField(
            model_name='topic',
            name='contents',
            field=models.ManyToManyField(blank=True, related_name='topics', through='topics.TopicContent', to='contents.content'),
        ),
        migrations.CreateModel(
            name='TopicEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('support', 'Support'), ('counter', 'Counter'), ('context', 'Context')], default='support', max_length=20)),
                ('source', models.CharField(choices=[('user', 'User'), ('agent', 'Agent'), ('rule', 'Rule')], default='user', max_length=10)),
                ('relevance', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('pinned', models.BooleanField(default=False)),
                ('rank', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agenda.event')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='topics.topic')),
            ],
        ),
        migrations.AddField(
            model_name='topic',
            name='events',
            field=models.ManyToManyField(blank=True, related_name='topics', through='topics.TopicEvent', to='agenda.event'),
        ),
        migrations.CreateModel(
            name='TopicImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='topics_images')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='topics_images')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('topic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='images', to='topics.topic')),
            ],
        ),
        migrations.CreateModel(
            name='TopicKeyword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('relevance', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('keyword', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='keywords.keyword')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='topics.topic')),
            ],
        ),
        migrations.AddField(
            model_name='topic',
            name='keywords',
            field=models.ManyToManyField(blank=True, related_name='topics', through='topics.TopicKeyword', to='keywords.keyword'),
        ),
        migrations.CreateModel(
            name='TopicRecap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recap', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recaps', to='topics.topic')),
            ],
        ),
        migrations.AddIndex(
            model_name='topiccontent',
            index=models.Index(fields=['topic'], name='topics_topi_topic_i_6f47f7_idx'),
        ),
        migrations.AddIndex(
            model_name='topiccontent',
            index=models.Index(fields=['content'], name='topics_topi_content_52c700_idx'),
        ),
        migrations.AddConstraint(
            model_name='topiccontent',
            constraint=models.UniqueConstraint(fields=('topic', 'content'), name='unique_topic_content'),
        ),
        migrations.AddIndex(
            model_name='topicevent',
            index=models.Index(fields=['topic'], name='topics_topi_topic_i_c24cda_idx'),
        ),
        migrations.AddIndex(
            model_name='topicevent',
            index=models.Index(fields=['event'], name='topics_topi_event_i_6ab48f_idx'),
        ),
        migrations.AddIndex(
            model_name='topicevent',
            index=models.Index(fields=['topic', 'pinned', 'rank'], name='topics_topi_topic_i_4d1d73_idx'),
        ),
        migrations.AddConstraint(
            model_name='topicevent',
            constraint=models.UniqueConstraint(fields=('topic', 'event'), name='unique_topic_event'),
        ),
        migrations.AddIndex(
            model_name='topic',
            index=pgvector.django.indexes.HnswIndex(ef_construction=64, fields=['embedding'], m=16, name='topic_embedding_hnsw', opclasses=['vector_l2_ops']),
        ),
        migrations.AddConstraint(
            model_name='topic',
            constraint=models.UniqueConstraint(fields=('slug', 'created_by'), name='unique_topic_title_user'),
        ),
    ]
