# Generated by Django 5.2.6 on 2025-10-06 13:57

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('topics', '0028_topictext'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='topic',
            name='last_published_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='topicdata',
            name='is_deleted',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='topicdata',
            name='published_at',
            field=models.DateTimeField(blank=True, db_index=True, null=True),
        ),
        migrations.AddField(
            model_name='topicdatainsight',
            name='is_deleted',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='topicdatainsight',
            name='published_at',
            field=models.DateTimeField(blank=True, db_index=True, null=True),
        ),
        migrations.AddField(
            model_name='topicdatavisualization',
            name='is_deleted',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='topicdatavisualization',
            name='published_at',
            field=models.DateTimeField(blank=True, db_index=True, null=True),
        ),
        migrations.AddField(
            model_name='topicdocument',
            name='is_deleted',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='topicdocument',
            name='published_at',
            field=models.DateTimeField(blank=True, db_index=True, null=True),
        ),
        migrations.AddField(
            model_name='topicentityrelation',
            name='is_deleted',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='topicentityrelation',
            name='published_at',
            field=models.DateTimeField(blank=True, db_index=True, null=True),
        ),
        migrations.AddField(
            model_name='topicevent',
            name='is_deleted',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='topicevent',
            name='published_at',
            field=models.DateTimeField(blank=True, db_index=True, null=True),
        ),
        migrations.AddField(
            model_name='topicimage',
            name='is_deleted',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='topicimage',
            name='published_at',
            field=models.DateTimeField(blank=True, db_index=True, null=True),
        ),
        migrations.AddField(
            model_name='topicrecap',
            name='is_deleted',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='topicrecap',
            name='published_at',
            field=models.DateTimeField(blank=True, db_index=True, null=True),
        ),
        migrations.AddField(
            model_name='topictext',
            name='is_deleted',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='topictext',
            name='published_at',
            field=models.DateTimeField(blank=True, db_index=True, null=True),
        ),
        migrations.AddField(
            model_name='topictweet',
            name='is_deleted',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='topictweet',
            name='published_at',
            field=models.DateTimeField(blank=True, db_index=True, null=True),
        ),
        migrations.AddField(
            model_name='topicwebpage',
            name='is_deleted',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='topicwebpage',
            name='published_at',
            field=models.DateTimeField(blank=True, db_index=True, null=True),
        ),
        migrations.AddField(
            model_name='topicyoutubevideo',
            name='is_deleted',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='topicyoutubevideo',
            name='video_published_at',
            field=models.DateTimeField(blank=True, db_index=True, null=True),
        ),
        migrations.AlterField(
            model_name='topicyoutubevideo',
            name='published_at',
            field=models.DateTimeField(blank=True, db_index=True, null=True),
        ),
        migrations.CreateModel(
            name='TopicPublication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('published_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('layout_snapshot', models.JSONField(default=dict)),
                ('context_snapshot', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('published_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='topic_publications', to=settings.AUTH_USER_MODEL)),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='publications', to='topics.topic')),
            ],
            options={
                'ordering': ('-published_at', 'id'),
            },
        ),
        migrations.AddField(
            model_name='topic',
            name='latest_publication',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='topics.topicpublication'),
        ),
        migrations.CreateModel(
            name='TopicPublicationModule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module_key', models.CharField(max_length=50)),
                ('placement', models.CharField(max_length=20)),
                ('display_order', models.PositiveIntegerField(default=0)),
                ('payload', models.JSONField(default=dict)),
                ('publication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='topics.topicpublication')),
            ],
            options={
                'ordering': ('placement', 'display_order', 'id'),
            },
        ),
        migrations.CreateModel(
            name='TopicPublishedData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_id', models.PositiveIntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('data', models.JSONField(default=dict)),
                ('sources', models.JSONField(default=list)),
                ('explanation', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('publication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='published_data', to='topics.topicpublication')),
            ],
            options={
                'ordering': ('publication', 'id'),
            },
        ),
        migrations.CreateModel(
            name='TopicPublishedDataInsight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_id', models.PositiveIntegerField(blank=True, null=True)),
                ('insight', models.TextField()),
                ('source_ids', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('publication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='published_data_insights', to='topics.topicpublication')),
            ],
            options={
                'ordering': ('publication', 'id'),
            },
        ),
        migrations.CreateModel(
            name='TopicPublishedDataVisualization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_id', models.PositiveIntegerField(blank=True, null=True)),
                ('chart_type', models.CharField(max_length=50)),
                ('chart_data', models.JSONField(default=dict)),
                ('insight_text', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('publication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='published_data_visualizations', to='topics.topicpublication')),
            ],
            options={
                'ordering': ('publication', 'id'),
            },
        ),
        migrations.CreateModel(
            name='TopicPublishedDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_id', models.PositiveIntegerField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('url', models.URLField(max_length=1000)),
                ('description', models.TextField(blank=True)),
                ('document_type', models.CharField(blank=True, max_length=20)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('publication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='published_documents', to='topics.topicpublication')),
            ],
            options={
                'ordering': ('publication', 'id'),
            },
        ),
        migrations.CreateModel(
            name='TopicPublishedEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_id', models.PositiveIntegerField(blank=True, null=True)),
                ('event_id', models.PositiveIntegerField()),
                ('role', models.CharField(blank=True, max_length=20)),
                ('significance', models.PositiveSmallIntegerField(default=1)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('publication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='published_events', to='topics.topicpublication')),
            ],
            options={
                'ordering': ('publication', 'id'),
            },
        ),
        migrations.CreateModel(
            name='TopicPublishedImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_id', models.PositiveIntegerField(blank=True, null=True)),
                ('image', models.CharField(blank=True, max_length=500)),
                ('thumbnail', models.CharField(blank=True, max_length=500)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('publication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='published_images', to='topics.topicpublication')),
            ],
            options={
                'ordering': ('publication', 'id'),
            },
        ),
        migrations.CreateModel(
            name='TopicPublishedRecap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_id', models.PositiveIntegerField(blank=True, null=True)),
                ('recap', models.TextField(blank=True)),
                ('status', models.CharField(blank=True, max_length=20)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('publication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='published_recaps', to='topics.topicpublication')),
            ],
            options={
                'ordering': ('publication', 'id'),
            },
        ),
        migrations.CreateModel(
            name='TopicPublishedRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_id', models.PositiveIntegerField(blank=True, null=True)),
                ('relations', models.JSONField(default=list)),
                ('status', models.CharField(blank=True, max_length=20)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('publication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='published_relations', to='topics.topicpublication')),
            ],
            options={
                'ordering': ('publication', 'id'),
            },
        ),
        migrations.CreateModel(
            name='TopicPublishedText',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_id', models.PositiveIntegerField(blank=True, null=True)),
                ('content', models.TextField(blank=True)),
                ('status', models.CharField(blank=True, max_length=20)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('publication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='published_texts', to='topics.topicpublication')),
            ],
            options={
                'ordering': ('publication', 'id'),
            },
        ),
        migrations.CreateModel(
            name='TopicPublishedTweet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_id', models.PositiveIntegerField(blank=True, null=True)),
                ('tweet_id', models.CharField(max_length=50)),
                ('url', models.URLField()),
                ('html', models.TextField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('publication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='published_tweets', to='topics.topicpublication')),
            ],
            options={
                'ordering': ('publication', 'id'),
            },
        ),
        migrations.CreateModel(
            name='TopicPublishedWebpage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_id', models.PositiveIntegerField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('url', models.URLField(max_length=1000)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('publication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='published_webpages', to='topics.topicpublication')),
            ],
            options={
                'ordering': ('publication', 'id'),
            },
        ),
        migrations.CreateModel(
            name='TopicPublishedYoutubeVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_id', models.PositiveIntegerField(blank=True, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('video_id', models.CharField(blank=True, max_length=50)),
                ('title', models.CharField(blank=True, max_length=200)),
                ('description', models.TextField(blank=True)),
                ('thumbnail', models.URLField(blank=True, null=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('publication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='published_youtube_videos', to='topics.topicpublication')),
            ],
            options={
                'ordering': ('publication', 'id'),
            },
        ),
    ]
