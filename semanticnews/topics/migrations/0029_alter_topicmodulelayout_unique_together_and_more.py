# Generated by Django 5.2.7 on 2025-10-06 07:53

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("agenda", "0004_event_locality_settings"),
        ("topics", "0028_topictext"),
    ]

    operations = [
        migrations.AlterUniqueTogether(
            name="topicmodulelayout",
            unique_together=set(),
        ),
        migrations.AddField(
            model_name="topic",
            name="published_at",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="topicmodulelayout",
            name="version",
            field=models.CharField(
                choices=[("draft", "Draft")], default="draft", max_length=20
            ),
        ),
        migrations.AlterUniqueTogether(
            name="topicmodulelayout",
            unique_together={("topic", "module_key", "version")},
        ),
        migrations.CreateModel(
            name="TopicPublication",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=200, null=True)),
                ("slug", models.SlugField(blank=True, max_length=200, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                (
                    "topic",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="publications",
                        to="topics.topic",
                    ),
                ),
            ],
            options={
                "ordering": ("-created_at",),
            },
        ),
        migrations.AddField(
            model_name="topic",
            name="current_publication",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="current_for",
                to="topics.topicpublication",
            ),
        ),
        migrations.CreateModel(
            name="TopicPublicationData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=200, null=True)),
                ("data", models.JSONField()),
                ("sources", models.JSONField(default=list)),
                ("explanation", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                (
                    "publication",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="datas",
                        to="topics.topicpublication",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TopicPublicationDataInsight",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("insight", models.TextField()),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                (
                    "publication",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="data_insights",
                        to="topics.topicpublication",
                    ),
                ),
                (
                    "sources",
                    models.ManyToManyField(
                        blank=True,
                        related_name="insights",
                        to="topics.topicpublicationdata",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TopicPublicationDataVisualization",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("chart_type", models.CharField(max_length=50)),
                ("chart_data", models.JSONField()),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                (
                    "insight",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="visualizations",
                        to="topics.topicpublicationdatainsight",
                    ),
                ),
                (
                    "publication",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="data_visualizations",
                        to="topics.topicpublication",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TopicPublicationDocument",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=255)),
                ("url", models.URLField(max_length=1000)),
                ("description", models.TextField(blank=True)),
                ("document_type", models.CharField(default="other", max_length=20)),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                (
                    "publication",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="documents",
                        to="topics.topicpublication",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TopicPublicationEntityRelation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("relations", models.JSONField(default=list)),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                (
                    "publication",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="entity_relations",
                        to="topics.topicpublication",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TopicPublicationEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("role", models.CharField(max_length=20)),
                ("source", models.CharField(max_length=10)),
                ("relevance", models.FloatField(blank=True, null=True)),
                ("significance", models.PositiveSmallIntegerField(default=1)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="agenda.event"
                    ),
                ),
                (
                    "publication",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="events",
                        to="topics.topicpublication",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TopicPublicationImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="topics_publication_images")),
                (
                    "thumbnail",
                    models.ImageField(
                        blank=True, null=True, upload_to="topics_publication_images"
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                (
                    "publication",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="topics.topicpublication",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TopicPublicationModuleLayout",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("module_key", models.CharField(max_length=50)),
                (
                    "placement",
                    models.CharField(
                        choices=[("primary", "Primary"), ("sidebar", "Sidebar")],
                        default="primary",
                        max_length=20,
                    ),
                ),
                ("display_order", models.PositiveIntegerField(default=0)),
                (
                    "publication",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="module_layouts",
                        to="topics.topicpublication",
                    ),
                ),
            ],
            options={
                "ordering": ["display_order", "id"],
            },
        ),
        migrations.CreateModel(
            name="TopicPublicationRecap",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("recap", models.TextField()),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                (
                    "publication",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recaps",
                        to="topics.topicpublication",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TopicPublicationText",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                (
                    "publication",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="texts",
                        to="topics.topicpublication",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TopicPublicationTweet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tweet_id", models.CharField(max_length=50)),
                ("url", models.URLField()),
                ("html", models.TextField()),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                (
                    "publication",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tweets",
                        to="topics.topicpublication",
                    ),
                ),
            ],
            options={
                "ordering": ("-created_at", "-id"),
            },
        ),
        migrations.CreateModel(
            name="TopicPublicationWebpage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=255)),
                ("url", models.URLField(max_length=1000)),
                ("description", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                (
                    "publication",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="webpages",
                        to="topics.topicpublication",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TopicPublicationYoutubeVideo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("url", models.URLField(blank=True, null=True)),
                ("video_id", models.CharField(max_length=50)),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("thumbnail", models.URLField(blank=True, null=True)),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                (
                    "publication",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="youtube_videos",
                        to="topics.topicpublication",
                    ),
                ),
            ],
        ),
    ]
